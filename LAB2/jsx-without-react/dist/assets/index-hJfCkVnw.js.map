{"version":3,"file":"index-hJfCkVnw.js","sources":["../../src/jsx-runtime.ts","../../src/components.tsx","../../src/chart.tsx","../../src/data-service.ts","../../src/dashboard.tsx","../../src/main.tsx"],"sourcesContent":["export interface VNode {\r\n  type: string | ComponentFunction;\r\n  props: Record<string, any>;\r\n  children: (VNode | string | number)[];\r\n}\r\n\r\nexport interface ComponentProps {\r\n  children?: (VNode | string | number)[];\r\n  [key: string]: any;\r\n}\r\n\r\nexport type ComponentFunction = (props: ComponentProps) => VNode;\r\n\r\nexport function createElement(\r\n  type: string | ComponentFunction,\r\n  props: Record<string, any> | null,\r\n  ...children: (VNode | string | number | null | undefined)[]\r\n): VNode {\r\n  props = props || {};\r\n  const flatChildren = children\r\n    .flat()\r\n    .filter((c): c is VNode | string | number => c != null);\r\n  if (typeof type === \"function\") {\r\n    return type({ ...props, children: flatChildren });\r\n  }\r\n  return { type, props, children: flatChildren };\r\n}\r\n\r\nexport function createFragment(\r\n  props: Record<string, any> | null,\r\n  ...children: (VNode | string | number)[]\r\n): VNode {\r\n  return createElement(\"fragment\", props, ...children);\r\n}\r\n\r\nexport const h = createElement;\r\nexport const Fragment = createFragment;\r\n\r\n// Event Delegation\r\nconst delegatedEvents: Record<string, boolean> = {};\r\n\r\nfunction setupEventDelegation(eventType: string) {\r\n  if (delegatedEvents[eventType]) return; // tránh đăng ký trùng\r\n  delegatedEvents[eventType] = true;\r\n\r\n  document.addEventListener(eventType, (e) => {\r\n    const target = e.target as HTMLElement;\r\n    const path = e.composedPath() as HTMLElement[];\r\n\r\n    for (const el of path) {\r\n      if (!(el instanceof HTMLElement)) continue;\r\n      const handlerId = el.getAttribute?.(`data-on${eventType}`);\r\n      if (handlerId && eventHandlers[handlerId]) {\r\n        eventHandlers[handlerId](e);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst eventHandlers: Record<string, (e: Event) => void> = {};\r\nlet handlerIdCounter = 0;\r\n\r\n// renderToDOM\r\nexport function renderToDOM(vnode: VNode | string | number): Node {\r\n  if (typeof vnode === \"string\" || typeof vnode === \"number\") {\r\n    return document.createTextNode(String(vnode));\r\n  }\r\n\r\n  if (typeof vnode.type === \"function\") {\r\n    const result = (vnode.type as Function)({\r\n      ...(vnode.props || {}),\r\n      children: vnode.children,\r\n    });\r\n    return renderToDOM(result);\r\n  }\r\n\r\n  const el = document.createElement(vnode.type as string);\r\n  const props = vnode.props || {};\r\n\r\n  for (const key in props) {\r\n    const value = props[key];\r\n\r\n    // Feature 1: Refs Suppor\r\n    if (key === \"ref\" && typeof value === \"function\") {\r\n      value(el);\r\n      continue;\r\n    }\r\n\r\n    // Feature 2: CSS-in-JS Support\r\n    if (key === \"style\") {\r\n      if (typeof value === \"string\") {\r\n        el.setAttribute(\"style\", value);\r\n      } else if (typeof value === \"object\" && value !== null) {\r\n        const styleStr = Object.entries(value)\r\n          .map(([prop, val]) => {\r\n            const kebab = prop.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n            return `${kebab}: ${val}`;\r\n          })\r\n          .join(\"; \");\r\n        el.setAttribute(\"style\", styleStr);\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // Feature 3: Event Delegation\r\n    if (key.startsWith(\"on\") && typeof value === \"function\") {\r\n      const eventType = key.slice(2).toLowerCase();\r\n      const handlerId = `h${++handlerIdCounter}`;\r\n      eventHandlers[handlerId] = value;\r\n      el.setAttribute(`data-on${eventType}`, handlerId);\r\n      setupEventDelegation(eventType);\r\n      continue;\r\n    }\r\n\r\n    if (key === \"className\") {\r\n      el.setAttribute(\"class\", value);\r\n    } else if (value === true) {\r\n      el.setAttribute(key, \"\");\r\n    } else if (value !== false && value != null) {\r\n      el.setAttribute(key, String(value));\r\n    }\r\n  }\r\n\r\n  vnode.children.forEach((c) => {\r\n    el.appendChild(renderToDOM(c));\r\n  });\r\n\r\n  return el;\r\n}\r\n// mount & useState \r\nexport function mount(vnode: VNode, container: HTMLElement): void {\r\n  container.appendChild(renderToDOM(vnode));\r\n}\r\n\r\nexport function useState<T>(initialValue: T): [() => T, (newValue: T) => void] {\r\n  let value = initialValue;\r\n  const get = () => value;\r\n  const set = (newValue: T) => {\r\n    value = newValue;\r\n  };\r\n  return [get, set];\r\n}\r\n","/** @jsx createElement */\r\nimport { createElement, ComponentProps } from \"./jsx-runtime\";\r\n\r\n// CARD COMPONENT\r\ninterface CardProps extends ComponentProps {\r\n  title?: string;\r\n  className?: string;\r\n  onClick?: (e: MouseEvent) => void;\r\n}\r\n\r\nconst Card = ({ title, children, className = \"\", onClick }: CardProps) => {\r\n  return (\r\n    <div\r\n      className={`card ${className}`}\r\n      style={{\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"8px\",\r\n        padding: \"16px\",\r\n        margin: \"8px 0\",\r\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n        backgroundColor: \"#fff\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      {title && <h3 style={{ marginTop: \"0\" }}>{title}</h3>}\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// MODAL COMPONENT\r\ninterface ModalProps extends ComponentProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n}\r\n\r\nconst Modal = ({ isOpen, onClose, title, children }: ModalProps) => {\r\n  if (!isOpen) return null;\r\n\r\n  const handleOverlayClick = (e: MouseEvent) => {\r\n    if ((e.target as HTMLElement).classList.contains(\"modal-overlay\")) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"modal-overlay\"\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        zIndex: 1000,\r\n      }}\r\n      onClick={handleOverlayClick}\r\n    >\r\n      <div\r\n        className=\"modal-content\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          padding: \"20px\",\r\n          borderRadius: \"10px\",\r\n          minWidth: \"300px\",\r\n          maxWidth: \"90%\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {title && <h3 style={{ marginTop: \"0\" }}>{title}</h3>}\r\n        <button\r\n          onClick={onClose}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            background: \"none\",\r\n            border: \"none\",\r\n            fontSize: \"18px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n        <div>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// FORM COMPONENT\r\ninterface FormProps extends ComponentProps {\r\n  onSubmit: (e: Event) => void;\r\n  className?: string;\r\n}\r\n\r\nconst Form = ({ onSubmit, children, className = \"\" }: FormProps) => {\r\n  const handleSubmit = (e: Event) => {\r\n    e.preventDefault();\r\n    onSubmit(e);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={className}\r\n      style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\n// INPUT COMPONENT\r\ninterface InputProps extends ComponentProps {\r\n  type?: string;\r\n  value: string;\r\n  onChange: (e: Event) => void;\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\nconst Input = ({\r\n  type = \"text\",\r\n  value,\r\n  onChange,\r\n  placeholder = \"\",\r\n  className = \"\",\r\n}: InputProps) => {\r\n  const handleInput = (e: Event) => {\r\n    onChange(e);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      className={className}\r\n      style={{\r\n        padding: \"8px\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: \"4px\",\r\n        fontSize: \"14px\",\r\n      }}\r\n      onInput={handleInput}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Card, Modal, Form, Input };\r\n","/** @jsx createElement */\r\nimport { createElement, useState } from \"./jsx-runtime\";\r\n\r\ninterface ChartProps {\r\n  data: { label: string; value: number }[];\r\n  type: \"bar\" | \"line\" | \"pie\";\r\n}\r\n\r\nexport const Chart = ({ data, type }: ChartProps) => {\r\n  const [getCanvas, setCanvas] = useState<HTMLCanvasElement | null>(null);\r\n\r\n  const drawChart = () => {\r\n    const canvas = getCanvas();\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if (type === \"bar\") drawBar(ctx, data);\r\n    else if (type === \"line\") drawLine(ctx, data);\r\n    else drawPie(ctx, data);\r\n  };\r\n\r\n  const drawBar = (ctx: CanvasRenderingContext2D, d: any[]) => {\r\n    const w = 50,\r\n      gap = 20;\r\n    d.forEach((item, i) => {\r\n      const x = i * (w + gap) + 30;\r\n      const y = 200 - item.value * 1.5;\r\n      ctx.fillStyle = \"#4f46e5\";\r\n      ctx.fillRect(x, y, w, item.value * 1.5);\r\n      ctx.fillText(item.label, x, 220);\r\n    });\r\n  };\r\n\r\n  const drawLine = (ctx: CanvasRenderingContext2D, d: any[]) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"#22c55e\";\r\n    ctx.moveTo(50, 200 - d[0].value);\r\n    d.forEach((item, i) => ctx.lineTo(50 + i * 80, 200 - item.value));\r\n    ctx.stroke();\r\n  };\r\n\r\n  const drawPie = (ctx: CanvasRenderingContext2D, d: any[]) => {\r\n    const total = d.reduce((sum, x) => sum + x.value, 0);\r\n    let start = 0;\r\n    d.forEach((item) => {\r\n      const slice = (item.value / total) * 2 * Math.PI;\r\n      ctx.beginPath();\r\n      ctx.moveTo(150, 100);\r\n      ctx.arc(150, 100, 80, start, start + slice);\r\n      ctx.closePath();\r\n      ctx.fillStyle = `hsl(${Math.random() * 360},70%,60%)`;\r\n      ctx.fill();\r\n      start += slice;\r\n    });\r\n  };\r\n\r\n  // Re-draw\r\n  setTimeout(drawChart, 50);\r\n\r\n  return (\r\n    <canvas\r\n      width=\"400\"\r\n      height=\"250\"\r\n      style={{ border: \"1px solid #ccc\", borderRadius: \"8px\" }}\r\n      ref={(el: HTMLCanvasElement) => setCanvas(el)}\r\n    ></canvas>\r\n  );\r\n};\r\n","\r\ninterface DataPoint {\r\n  label: string;\r\n  value: number;\r\n}\r\n\r\nexport class DataService {\r\n  static generateData(count: number = 5): DataPoint[] {\r\n    return Array.from({ length: count }, (_, i) => ({\r\n      label: `Item ${i + 1}`,\r\n      value: Math.floor(Math.random() * 100) + 10,\r\n    }));\r\n  }\r\n\r\n  static updateData(data: DataPoint[]): DataPoint[] {\r\n    return data.map((d) => ({\r\n      ...d,\r\n      value: Math.max(10, d.value + (Math.random() * 20 - 10)),\r\n    }));\r\n  }\r\n}\r\n","/** @jsx createElement */\r\nimport { createElement, useState } from \"./jsx-runtime\";\r\nimport { Card, Form } from \"./components\";\r\nimport { Chart } from \"./chart\";\r\nimport { DataService } from \"./data-service\";\r\n\r\nexport const Dashboard = () => {\r\n  const [getData, setData] = useState(DataService.generateData());\r\n  const [getType, setType] = useState<\"bar\" | \"line\" | \"pie\">(\"bar\");\r\n\r\n  const updateData = () => setData(DataService.updateData(getData()));\r\n\r\n  return (\r\n    <div style={{ fontFamily: \"sans-serif\", padding: \"20px\" }}>\r\n      <h1 style={{ color: \"#4f46e5\" }}>📊 Dashboard</h1>\r\n      <Form onSubmit={(e) => e.preventDefault()}>\r\n        <select\r\n          value={getType()}\r\n          onChange={(e: Event) => {\r\n            const target = e.target as HTMLSelectElement;\r\n            setType(target.value as \"bar\" | \"line\" | \"pie\");\r\n          }}\r\n        >\r\n          <option value=\"bar\">Bar</option>\r\n          <option value=\"line\">Line</option>\r\n          <option value=\"pie\">Pie</option>\r\n        </select>\r\n        <button type=\"button\" onClick={updateData}>\r\n          Refresh Data\r\n        </button>\r\n      </Form>\r\n\r\n      <Card title={`Chart Type: ${getType()}`}>\r\n        <Chart data={getData()} type={getType()} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { createElement } from \"./jsx-runtime\";\r\nimport { Dashboard } from \"./dashboard\";\r\n\r\nconst root = document.getElementById(\"root\");\r\nif (root) {\r\n  root.appendChild(Dashboard());\r\n}\r\n"],"names":["createElement","type","props","children","flatChildren","c","useState","initialValue","value","newValue","Card","title","className","onClick","Form","onSubmit","Chart","data","getCanvas","setCanvas","drawChart","canvas","ctx","drawBar","drawLine","drawPie","d","item","i","x","y","total","sum","start","slice","el","DataService","count","_","Dashboard","getData","setData","getType","setType","updateData","e","target","root"],"mappings":"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"}